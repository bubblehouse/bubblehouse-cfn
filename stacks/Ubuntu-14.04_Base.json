{
    "Description": "org.bubblehouse.cloudformation.stacks.Ubuntu-14.04_Base@v0.0.1",
    
    "Parameters": {
        "InstanceHostName": {
            "Description": "The name (short hostname) of this instance.",
            "Type": "String"
        },
        "InstanceZone": {
            "Default": "bubblehouse.org",
            "Description": "The zone to add this instance's DNS name to.",
            "Type": "String"
        },
        "KeyBucketAccess" : {
            "Default" : "",
            "Description" : "Access key for S3.", 
            "Type" : "String"
        },
        "KeyBucketSecret" : {
            "Default" : "",
            "Description" : "Secret key for S3.", 
            "Type" : "String"
        },
        "KeyPairName": {
            "Default": "bubblehouse-master_20140323",
            "Description": "Name of an existing EC2 KeyPair to enable ubuntu@ SSH access to the server",
            "Type": "String"
        },
        "SecurityGroupIds": {
            "Default": "sg-6946510b",
            "Description": "Comma-separated list of security group IDs.",
            "Type": "CommaDelimitedList"
        },
        "SubnetId": {
            "Default": "subnet-f0706684",
            "AllowedPattern": "subnet-[a-z0-9]{8}",
            "ConstraintDescription": "must be a valid Amazon VPC subnet ID.",
            "Description": "VPC Subnet to deploy this instance to.",
            "Type": "String"
        },
        "StackDescription": {
            "Default": "EC2 Instance",
            "Description": "Description of this stack.",
            "Type": "String"
        },
        "SelectedImageId": {
            "Default": "ami-864d84ee",
            "Description": "The ID of an Ubuntu LTS 14.04 AMI to boot from.",
            "Type": "String"
        },
        "InstanceType": {
            "Default": "t2.medium",
            "Description": "EC2 instance type, e.g. m1.small, m1.large, etc.",
            "Type": "String"
        },
        "KeyBucket" : {
            "Default" : "archive.bubblehouse.org",
            "Description" : "Name of the bucket to pull keys from for phil SSH access to the instance", 
            "Type" : "String"
        },
        "KeyPath" : {
            "Default" : "ssh-keys/chalkpie-personal-key.pub",
            "Description" : "Path within the bucket to your public key.", 
            "Type" : "String"
        }
    },
    
    "Outputs": {
        "InstanceId": { "Value": { "Ref": "ec2" } },
        "PublicIP": { "Value": { "Ref": "eip" } },
        "DNSName": { "Value": { "Ref": "eip" } }
    },
    
    "Resources": {
        "eip": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": { "Ref": "ec2" }
            }
        },
        "ec2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": { "Ref": "InstanceType" },
                "Tags": [
                    { "Key": "Name", "Value": { "Ref": "InstanceHostName" } }
                ],
                "ImageId": { "Ref": "SelectedImageId" },
                "SubnetId": { "Ref": "SubnetId" },
                "SecurityGroupIds": { "Ref": "SecurityGroupIds" },
                "KeyName": { "Ref": "KeyPairName" },
                "UserData": {
                    "Fn::Base64": { "Fn::Join": ["\n", [
                        "#!/bin/bash -ex",
                        "echo \"%admin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/99-sudo-nopwd-admins",
                        "chmod 0440 /etc/sudoers.d/99-sudo-nopwd-admins",
                        "apt-get update",
                        "apt-get install -y python-pip",
                        "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz",
                        {"Fn::Join": [" ", [
                            "cfn-init -v -c provision -s", { "Ref": "AWS::StackName" }, "--region", { "Ref": "AWS::Region" }, "-r ec2"
                        ]]}
                    ]]}
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication" : {
                    "S3ReadOnlyCreds" : {
                      "type" : "S3",
                      "accessKeyId" : {"Ref" : "KeyBucketAccess"},
                      "secretKey" : {"Ref" : "KeyBucketSecret"},
                      "buckets" : {"Ref" : "KeyBucket"}
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "provision": [
                            "create-admins", "configure-admins-userfiles",
                            "configure-hostname",
                            "install-puppet-apt-source",
                            "install-unattended-upgrades",
                            "install-packages",
                            "clear-wait"
                        ]
                    },
                    "create-admins" : {
                        "commands" : {
                            "0001_phil" : {
                                "command" : "sudo adduser -q --disabled-password --gecos \"\" phil"
                            },
                            "0002_phil-admin-group" : {
                                "command" : "sudo adduser phil admin"
                            },
                            "0003_phil-dot-ssh" : {
                                "command" : "mkdir -m 700 /home/phil/.ssh"
                            },
                            "0004_phil-chown-dot-ssh" : {
                                "command" : "chown phil:phil /home/phil/.ssh"
                            }
                        }
                    },
                    "configure-admins-userfiles" : {
                        "files" : {
                            "/home/phil/.ssh/authorized_keys" : {
                                "source" : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", {"Ref" : "KeyBucket"}, {"Ref" : "KeyPath"}]] },
                                "mode" : "000600",
                                "owner" : "phil",
                                "group" : "admin",
                                "authentication" : "S3ReadOnlyCreds"
                            }
                        }
                    },
                    "install-puppet-apt-source": {
                        "commands": {
                            "0001_puppet-wget-deb": {
                                "command": "wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb",
                                "cwd": "/tmp"
                            },
                            "0002_puppet-dpkg-install": {
                                "command": "dpkg -i puppetlabs-release-trusty.deb",
                                "cwd": "/tmp"
                            },
                            "0003_puppet-apt-get-update": {
                                "command": "apt-get update"
                            }
                        }
                    },
                    "configure-hostname": {
                        "commands": {
                            "0001_modify-etc-hostname": {
                                "command": { "Fn::Join": ["", ["echo \"", { "Ref": "InstanceHostName" },".", { "Ref" : "InstanceZone"}, "\" > /etc/hostname"]] }
                            },
                            "0002_set-hostname": {
                                "command": "hostname -b $(cat /etc/hostname)"
                            },
                            "0003_modify-etc-hosts": {
                                "command": "echo \"127.0.1.1 $(cat /etc/hostname) $(cat /etc/hostname | cut -d . -f 1)\" >> /etc/hosts"
                            }
                        }
                    },
                    "install-unattended-upgrades": {
                        "packages": {
                            "apt": { 
                                "unattended-upgrades" : []
                            }
                        }
                    },
                    "install-packages": {
                        "packages": {
                            "apt": { 
                                "puppet" : [],
                                "git" : [],
                                "virtualenvwrapper" : [],
                                "tree" : [],
                                "ccze" : []
                            }
                        }
                    },
                    "clear-wait": {
                        "commands": {
                            "0001_clear-wait-condition": {
                                "command": { "Fn::Join" : ["", [
                                    "curl -X PUT -H 'Content-Type:' --data-binary '{",
                                        "\"Status\": \"SUCCESS\",",
                                        "\"Reason\": \"Configuration Complete\",",
                                        "\"UniqueId\" : \"ID1234\",",
                                        "\"Data\" : \"Application has completed configuration.\"",
                                    "}' \"", { "Ref" : "waitHandle" }, "\""
                                ]] }
                            }
                        }
                    }
                }
            }
        },
        "dns" : {
            "Type" : "AWS::Route53::RecordSet",
            "DependsOn" : ["ec2", "eip"],
            "Properties" : {
                "HostedZoneName" : { "Fn::Join" : ["", [{ "Ref" : "InstanceZone"}, "."]] },
                "Name" : { "Fn::Join" : ["", [{ "Ref" : "InstanceHostName"}, ".", { "Ref" : "InstanceZone"}, "."]] },
                "Type" : "CNAME",
                "TTL" : "300",
                "ResourceRecords" : [
                    { "Fn::GetAtt" : [ "ec2" , "PublicDnsName" ] }
                ]
            }
        },
        "wait" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "ec2",
            "Properties" : {
                "Handle" : { "Ref" : "waitHandle" },
                "Timeout" : "1800"
            }
        },
        "waitHandle" : {
             "Type" : "AWS::CloudFormation::WaitConditionHandle",
             "Properties" : {}
        }
    },
    
    "AWSTemplateFormatVersion": "2010-09-09"
}
